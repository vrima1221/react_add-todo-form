{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserById","users","find","preparedTodos","userId","usersFromServer","getLargestTodoId","Math","max","App","userDefaultValue","useState","setTitle","selectedUserInfo","setUserName","isUserError","setUserError","isTitleError","setErrorTitle","setTodos","Paper","sx","padding","elevation","action","method","onSubmit","event","preventDefault","newUser","prevTodo","FormControl","marginBottom","width","error","TextField","label","type","value","onChange","currentTarget","placeholder","FormHelperText","position","bottom","InputLabel","Select","labelId","target","MenuItem","disabled","Button","display","variant","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec43adcf.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport {\n  Paper,\n  FormControl,\n  TextField,\n  FormHelperText,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  Button,\n} from '@mui/material';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(users: User[], id: number) {\n  return users.find(user => user.id === id) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(usersFromServer, todo.userId),\n}));\n\nfunction getLargestTodoId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nexport const App = () => {\n  const titleDefaultValue = '';\n  const userDefaultValue = 'Choose a user';\n\n  const [title, setTitle] = useState(titleDefaultValue);\n  const [selectedUserInfo, setUserName] = useState(userDefaultValue);\n  const [isUserError, setUserError] = useState(false);\n  const [isTitleError, setErrorTitle] = useState(false);\n  const [todos, setTodos] = useState(preparedTodos);\n\n  const handleTitleCHange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setErrorTitle(false);\n  };\n\n  const handleUserChange = (event: SelectChangeEvent) => {\n    setUserName(event.target.value);\n    setUserError(false);\n  };\n\n  const clearForm = () => {\n    setTitle(titleDefaultValue);\n    setUserName(userDefaultValue);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (selectedUserInfo === userDefaultValue) {\n      setUserError(true);\n    }\n\n    if (title === titleDefaultValue) {\n      setErrorTitle(true);\n    }\n\n    if (\n      selectedUserInfo !== userDefaultValue && title !== titleDefaultValue\n    ) {\n      const newUser = getUserById(usersFromServer, +(selectedUserInfo));\n\n      setTodos(prevTodo => {\n        return [\n          ...prevTodo,\n          {\n            id: getLargestTodoId(prevTodo) + 1,\n            title,\n            completed: false,\n            userId: newUser ? newUser.id : null,\n            user: newUser,\n          },\n        ];\n      });\n\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper\n        sx={{ padding: '24px' }}\n        elevation={5}\n      >\n        <h1 className=\"App__title\">Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmitForm}\n          className=\"App__form\"\n        >\n\n          <FormControl\n            sx={{ marginBottom: '32px', width: '300px' }}\n            error={isTitleError}\n          >\n            <TextField\n              error={isTitleError}\n              label=\"Title: \"\n              id=\"titleInput\"\n              name=\"titleInput\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleCHange}\n              placeholder=\"Title\"\n            />\n            {isTitleError && (\n              <FormHelperText\n                sx={{ position: 'absolute', bottom: '-20px' }}\n              >\n                Please enter a title\n              </FormHelperText>\n            )}\n          </FormControl>\n\n          <FormControl\n            sx={{ marginBottom: '32px', width: '300px' }}\n            error={isUserError}\n          >\n            <InputLabel id=\"demo-simple-select-label\">\n              {'User: '}\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              value={selectedUserInfo}\n              label=\"User\"\n              id=\"userSelect\"\n              name=\"userSelect\"\n              data-cy=\"userSelect\"\n              onChange={handleUserChange}\n            >\n              <MenuItem value={userDefaultValue} disabled>\n                {userDefaultValue}\n              </MenuItem>\n              {usersFromServer.map(user => (\n                <MenuItem value={user.id} key={user.id}>\n                  {user.name}\n                </MenuItem>\n              ))}\n            </Select>\n            {isUserError && (\n              <FormHelperText\n                sx={{ position: 'absolute', bottom: '-20px' }}\n              >\n                Please choose a user\n              </FormHelperText>\n            )}\n          </FormControl>\n\n          <Button\n            sx={{ display: 'block' }}\n            type=\"submit\"\n            variant=\"contained\"\n            data-cy=\"submitButton\"\n            color={(\n              isTitleError || isUserError\n                ? 'error'\n                : 'primary'\n            )}\n          >\n            Add\n          </Button>\n        </form>\n\n        <TodoList todos={todos} />\n      </Paper>\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}